#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;  // You will need this when you do lighting
layout(location = 2) in vec3 vertexColor; 

// Values that stay constant for the whole mesh.
uniform mat4 ViewProjectonTransform;
uniform mat4 WorldTransform;
uniform mat4 ProjectonTransform;

out vec3 eyeVector;
out vec4 lightVector;
out vec3 normal;  // You will need this when you do per-fragment lighting
out vec3 v_color;

vec4 WorldLightPosition; // if w = 1: Point light, if w = 0: directional light

void main() {

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  ViewProjectonTransform * WorldTransform * vec4(vertexPosition_modelspace,1);

	v_color = vertexColor;
}